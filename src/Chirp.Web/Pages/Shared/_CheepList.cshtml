@using Chirp.Web
@using Chirp.Core.Entities
@using Chirp.Core.Repository
@inject SignInManager<Author> SigninManager
@inject UserManager<Author> UserManager
@inject IAuthorRepository AuthorRepository
@model dynamic

 
<ul id="messagelist" class="cheeps">
    @foreach (CheepViewModel cheep in Model.Cheeps)
    {
        Author cheepAuthor = AuthorRepository.GetAuthorByIdAsync(cheep.AuthorId).Result;
        <li>
            <div class="cheep-view">
                <div class="cheep-info">
                    <strong>
                        <a href="/@cheep.Author">@cheep.Author</a>
                        <p>Followers: @cheepAuthor.Followers.Count</p>
                    </strong>
                    <p class="cheep-message">
                        @cheep.Message
                    </p>

                    <small>&mdash; @cheep.Timestamp</small>
                </div>
                <div class="reaction-box">
                    @foreach (var reaction in cheep.Reactions)
                    {
                        <u class="reactions-display">@reaction.reactionType: @reaction.count</u>
                    }
                </div>
                @if (SigninManager.IsSignedIn(User) || cheep.Author == User.Identity?.Name){
<<<<<<< Updated upstream
                    if (!Model.user.Following.Contains(await AuthorRepository.GetAuthorByIdAsync(cheep.AuthorId))) {
                        <p>@Model.user</p>
                        <p>@await AuthorRepository.GetAuthorByIdAsync(cheep.AuthorId)</p>
                        <p>@cheep.AuthorId</p>
=======
                    if (!Model.user.Following.Contains(cheepAuthor)) {
>>>>>>> Stashed changes
                        <form asp-page-handler="Follow" method="post">
                            <input type="hidden" id="author2FollowId" name="Author2FollowInput" value="@cheep.AuthorId.ToString()" />
                            <input type="submit" value="Follow" />
                        </form>
                    } else {
                        <p>@Model.user</p>
                        <p>@await AuthorRepository.GetAuthorByIdAsync(cheep.AuthorId)</p>
                        <p>@cheep.AuthorId</p>
                        <form asp-page-handler="Unfollow" method="post">
                            <input type="hidden" id="author2UnfollowId" name="Author2UnfollowInput" value="@cheep.AuthorId.ToString()" />
                            <input type="submit" value="Unfollow" />
                        </form>
                    }
                
                }
            </div>
        </li>
    }
</ul>