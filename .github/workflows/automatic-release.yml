#Sources: ChatGPT 4.0, https://patriksvensson.se/posts/2020/03/creating-release-artifacts-with-github-actions

name: .NET Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    name: Build on ubuntu-latest and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kind: [ubuntu-latest, windows-latest, macos-latest, macos-latest]
        include:
          - os: macos-latest
            dotnet-runtime: osx-arm64
          - os: macos-latest
            dotnet-runtime: osx-x64
          - os: windows-latest
            dotnet-runtime: win-x64
          - os: ubuntu-latest
            dotnet-runtime: linux-x64
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        runtime: ${{ matrix.dotnet-runtime }}

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: |

          tag=$(git describe --tags --abbrev=0)
          release_name="Chirp.CLI-$tag-${{ matrix.target }}"

          dotnet publish src/Chirp.CLI/Chirp.CLI.csproj --c Release --framework net7.0 -output "$release_name"

          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi
        
          rm -r "$release_name"

    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "Chirp.CLI*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           
